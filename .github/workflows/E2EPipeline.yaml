name: E2EPipeline
    
on:
#   push:
#     branches: ['master']
#   pull_request:
#     branches: ['master']
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Custom Change
#         uses: ServiceNow/servicenow-devops-change@v1.34.2
#         uses: surya-konduru-sn/servicenow-devops-change@main
        uses: ServiceNow/servicenow-devops-change@dev2
        with:
              devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
              devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
              devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
              instance-url: ${{ secrets.SN_INSTANCE_URL }}
              tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
              context-github: ${{ toJSON(github) }}
              job-name: 'Build'
              change-request: '{"setCloseCode":"true","attributes":{"short_description":"FIRST CR Automated Software Deployment","description":"Automated Software Deployment.","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
              interval: '100'
              timeout: '3600'
  GithubEnvChangeApproval:   
    name: GithubEnvChange
    runs-on: ubuntu-latest
    needs: build
    environment: prod
    steps:
      - name: Deployment Scripts
        run: echo Deployment started       
  integrationTest:
    needs: GithubEnvChangeApproval
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:  
      - name: Register Artifact
#         uses: ServiceNow/servicenow-devops-register-artifact@v1.34.2
        uses: ServiceNow/servicenow-devops-register-artifact@main
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Integration Tests'
          artifacts: ' [{"name": "com:autoclaim","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'

      - name: Register Package
#         uses: ServiceNow/servicenow-devops-register-package@v1.34.2
        uses: ServiceNow/servicenow-devops-register-package@main
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Integration Tests'
          artifacts: ' [{"name": "com:autoclaim","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'
          package-name: 'autoclaim.war'
      
  deploy:
    needs: integrationTest
    name: Deploy
    runs-on: ubuntu-latest
    steps:     
      - name: Custom Change
#         uses: ServiceNow/servicenow-devops-change@v1.34.2
        uses: ServiceNow/servicenow-devops-change@main
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Deploy'
          change-request: '{"setCloseCode":"true","attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018"}}'
          interval: '100'
          timeout: '3600'
          
      - name: Run deployment scripts
        run: echo Completed Deployment.
